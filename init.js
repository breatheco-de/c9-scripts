({name:"c9Scripts",debug:!0,init:function(){this.runScripts(this)},runScripts:o=>(o.console.log(o,"runScripts"),new Promise((e,r)=>{services.fs.readFile("~/c9-scripts/scripts/get-scripts.js",(e,l)=>{if(e)o.onError(o,e),r();else{new Function(l)().forEach(e=>services.fs.readFile("~/c9-scripts/scripts/"+e+".js",(e,l)=>{if(e)o.onError(o,e),r();else{new Function(l)()(o,services,plugin)}}))}})})),git:{getClone:function(o){return"/home/ubuntu/c9-scripts"},getRemote:function(o){return"https://github.com/breatheco-de/c9-scripts.git"}},console:{getPrefix:function(o){return"["+o.name+"]"},log:function(o,e){console.log.apply(console,[o.console.getPrefix(o)].concat(e))},error:function(o,e){console.error.apply(console,[o.console.getPrefix(o)].concat(e))}},notification:{error:(o,e)=>services["dialog.error"].show(e),info:(o,e)=>services["dialog.alert"].show(e)},onError:function(o,e){o.console.error(o,e),o.notification.error(o,o.name+" failed: "+e.message)},doInstallOrUpgradeIfHostedWorkspace:function(o){o.console.log(o,"doInstallOrUpgradeIfHostedWorkspace"),services.proc.execFile("sh",{args:["-c",'echo -n "$C9_HOSTNAME"'],cwd:"/"},(e,r,l)=>o.doInstallOrUpgradeIfHostedWorkspaceCallback(o,e,r,l))},doInstallOrUpgradeIfHostedWorkspaceCallback:function(o,e,r,l){if(o.console.log(o,"doInstallOrUpgradeIfHostedWorkspaceCallback"),e)return o.onError(o,e);r.endsWith(".c9users.io")&&o.doInstallOrUpgrade(o)},doInstallOrUpgrade:function(o){o.console.log(o,"doInstallOrUpgrade"),services.proc.execFile("test",{args:["-d",o.git.getClone()],cwd:"/"},(e,r,l)=>o.doInstallOrUpgradeCallback(o,e,r,l))},doInstallOrUpgradeCallback:function(o,e,r,l){o.console.log(o,"doInstallOrUpgradeCallback"),e&&1==e.code?o.doClone(o):e?o.onError(o,e):o.doUpgrade(o)},doClone:function(o,e){o.console.log(o,"doClone"),services.proc.execFile("git",{args:["clone",o.git.getRemote(),o.git.getClone()],cwd:"/"},e=>o.doCloneCallback(o,e))},doCloneCallback:function(o,e){if(o.console.log(o,"doCloneCallback"),e)return o.onError(o,e);o.doInstall(o)},doUpgrade:function(o){o.console.log(o,"doUpgrade"),services.proc.execFile("git",{args:["pull"],cwd:o.git.getClone()},e=>o.doUpgradeCallback(o,e))},doUpgradeCallback:function(o,e){if(o.console.log(o,"doUpgradeCallback"),e)return o.onError(o,e);o.doInstall(o)},doInstall:function(o){o.console.log(o,"doInstall"),services.proc.execFile("bash",{args:["./install"],cwd:o.git.getClone()},(e,r)=>o.doInstallCallback(o,e,r))},doInstallCallback:function(o,e,r){if(o.console.log(o,"doInstallCallback"),e)return o.onError(o,e);this.runScripts(o)}}).init();